# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

interface AddressRepoInfoInterface {
  beds: Int
  baths: Int
  square: Float
}

interface PurchaseRange {
  from: Float
  to: Float
}

interface Mortgage {
  down_payment: Float
  interest_rate: Float
  loan_term: Float
  closing_costs: Float
}

interface Expenses {
  property_taxes: Float
  insurance: Float
  hoa_fee: Float
  management: Float
  maintenance: Float
  vacancy: Float
}

type TokenResponse {
  token: String!
}

type ZipCodeEntity {
  id: Float!
  code: String!
  price: Float!
  created_at: DateTime!
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type AddressEntityInfo {
  beds: Int
  baths: Int
  square: Float
}

type AddressEntity {
  id: ID!
  address: String!
  created_at: DateTime!
  updated_at: DateTime
  info: AddressEntityInfo!
}

type FavoriteAddressEntityInfo {
  asking: Float
  offer: Float
  down: Float
  cashflow: Float
  repairs: Float
}

type FavoriteAddressEntity {
  created_at: DateTime!
  updated_at: DateTime
  info: FavoriteAddressEntityInfo!
  address: AddressEntity
}

type SettingDataExpenses {
  property_taxes: Float
  insurance: Float
  hoa_fee: Float
  management: Float
  maintenance: Float
  vacancy: Float
}

type SettingDataMortgage {
  down_payment: Float
  interest_rate: Float
  loan_term: Float
  closing_costs: Float
}

type SettingDataPurchaseRange {
  from: Float
  to: Float
}

type EntitySettingData {
  use_loan: Boolean!
  purchase_range: SettingDataPurchaseRange!
  mortgage: SettingDataMortgage!
  expenses: SettingDataExpenses!
}

type SettingEntity {
  data: EntitySettingData
}

type UserEntity {
  id: Int!
  first_name: String!
  last_name: String!
  email: String!
  created_at: DateTime!
  password: String!
  avatar: String!
  setting: SettingEntity
}

type Query {
  getGoogleAuthUrl: String!
  findManyZipCodes(dto: ZipCodesDto!): [ZipCodeEntity!]!
  findOneZipCode(dto: ZipCodeDto!): ZipCodeEntity!
  getFavorites: [FavoriteAddressEntity!]!
  getProfile: UserEntity
}

input ZipCodesDto {
  codes: [String!]!
}

input ZipCodeDto {
  code: String!
}

type Mutation {
  socialSignIn(input: SocialSignInInput!): TokenResponse!
  addAddressToFavorite(addressData: AddressInput!, pricesData: FavoriteAddressPricesInput!): AddressEntity!
  updateSetting(input: UpdateSettingInput!): SettingEntity!
}

input SocialSignInInput {
  code: String!
  type: SocialAuthType! = GOOGLE
}

enum SocialAuthType {
  GOOGLE
}

input AddressInput {
  address: String!
  zipCode: String!
  info: AddressInputInfo!
}

input AddressInputInfo {
  beds: Int = null
  baths: Int = null
  square: Float = null
}

input FavoriteAddressPricesInput {
  asking: Float = null
  offer: Float = null
  down: Float = null
  cashflow: Float = null
  repairs: Float = null
}

input UpdateSettingInput {
  data: UpdateSettingData!
}

input UpdateSettingData {
  use_loan: Boolean! = false
  purchase_range: UpdateSettingDataPurchaseRange!
  mortgage: UpdateSettingDataMortgage!
  expenses: UpdateSettingDataExpenses!
}

input UpdateSettingDataPurchaseRange {
  from: Float = null
  to: Float = null
}

input UpdateSettingDataMortgage {
  down_payment: Float = null
  interest_rate: Float = null
  loan_term: Float = null
  closing_costs: Float = null
}

input UpdateSettingDataExpenses {
  property_taxes: Float = null
  insurance: Float = null
  hoa_fee: Float = null
  management: Float = null
  maintenance: Float = null
  vacancy: Float = null
}